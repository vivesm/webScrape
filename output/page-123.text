Add a private SSO integration | Okta Developer
Community
Forum
Blog
Pricing
Okta Docs
Okta.com
Log in
      Sign up
      Instructions for
OpenID Connect
Loading...
    On this page
            Overview
Loading...
    Add a private SSO integration
Use this guide to add a private, custom Single Sign-On (SSO) OpenID Connect (OIDC) or SAML 2.0 integration to your Okta org. Only the users of the org where you install the private integration can use it. This guide also shows you how to test the private integration in your org.
Learning outcomes 
Learn how to add a private SSO integration to your Okta org
Learn how to test your SSO integration in your Okta org
What you need 
A functional SSO integration created in accordance with the 
Build a Single Sign-On integration
 guide
An Okta org (such as an 
Okta Developer Edition org
(opens new window)
)
Overview 
To integrate your app for Single Sign-On (SSO) with Okta, you need to first develop your app SSO integration. Then, you need to register your app with an Okta org before you can test it.
Registration involves creating an app integration instance in your Okta org to provide you with the SSO credentials or metadata for your app authentication requests. This integration is considered private because it's only available in the org from where the app integration instance was created.
Note:
 An app integration is considered public if it's available in the 
Okta Integration Network (OIN) catalog
(opens new window)
 for all Okta customers.
This guide assumes that you've developed your app SSO integration and want to add it to your Okta org. The instructions in this guide are generic for two SSO standards:
OpenID Connect (OIDC)
 (preferred)
Security Assertion Markup Language (SAML)
Note:
 Private integrations aren't restricted to the 
OIN limitations
. You can implement the Okta features that are available on your specific Okta org.
Create your private integration in Okta 
After you build your app SSO integration, use the Application Integration Wizard (AIW) in the Admin Console to create your app integration instance. This instance provides you with client credentials or metadata for your SSO flows.
Note:
 As a best practice, create two or three extra admin users in your Okta org to manage the integration. This ensures that your team can access the integration for updates in the future.
Sign in to your 
Developer Edition org
 as a user with administrative privileges.
Go to 
Applications
 > 
Applications
 in the Admin Console.
Click 
Create App Integration
.
On the Create a new app integration page, select 
OpenID Connect
 in the 
Sign-in method
 section.
Choose either 
Web Application
 or 
Single-Page Application
 as the 
Application type
 for your integration.
Click 
Next
.
In 
General Settings
, enter a name for your integration and (optionally) upload a logo.
Add your 
Sign-in redirect URIs
 and optional 
Sign-out redirect URIs
. These URIs must be absolute URIs, and you can specify more than one.
In 
Assignments
, assign a group or leave the 
Everyone
 default. Be sure to verify that the users you want to have access are assigned to the group that you select. For instructions on how to assign the app integration to individual users and groups, see the 
Assign app integrations
(opens new window)
 topic in the Okta product documentation.
Click 
Save
.
Specify your integration settings 
After you create your integration instance, the main settings page appears for your new integration in the Admin Console. Specify 
General Settings
 and 
Sign On
 options, and assign the integration to users in your org. Click 
Edit
 if you need to change any of the options, and 
Save
 when you finish.
Specify OIDC settings 
On the 
General
 tab, select the 
grant type
 for your OAuth 2.0 flow based on your app type:
Web app:
Authorization Code
 (mandatory for web platform applications)
Refresh token
 (not supported for OIN app integrations)
Implicit (hybrid)
 (optional) Click 
Advanced
 to select.
Note:
 If you're using Classic Engine, select 
Implicit (hybrid)
 from the 
Grant type
 section.
SPA:
Authorization Code
Implicit (hybrid)
 Click 
Advanced
 to select.
Note:
 For SPA app integrations, the 
Authorization Code
 grant type always uses PKCE to verify the client. Also, the 
Client acting on behalf of itself
 grant type isn't supported in OIN app integrations.
If you only want to support direct SSO to your application (the integration isn't launched from the Okta End-User Dashboard), then:
Enter one or more 
Sign-in redirect URIs
 values where Okta sends the OAuth responses.
Set the 
Sign-in initiated by
 dropdown box to 
App Only
.
Leave the remaining default values.
If you want to support launching your application from the Okta dashboard:
Enter one or more 
Sign-in redirect URIs
 values where Okta sends the OAuth responses.
(Optional) Enter the 
Sign-out redirect URIs
 where Okta redirects the browser after it receives the sign-out request from the relying party. Okta also terminates the user's session. See 
Configure Single Logout in app integrations
(opens new window)
 or the 
/logout
 API endpoint
(opens new window)
.
Change the 
Login initiated by
 field to 
Either Okta or App
 to give your integration an Okta tile.
Note:
 When you select this option, an 
App Embed Link
 section appears at the bottom of the page. The URL that the user can use to sign in to the OIDC client from outside of Okta is provided.
Select 
Display application icon to users
.
Select the 
Login flow
 option. For OIN app integrations, you must select 
Redirect to app to initiate login (OIDC Compliant)
.
Enter or change the URI used to initiate the sign-in request.
Click 
Save
 to commit your changes.
If required, you can generate a new client secret. In the 
Client Credentials
 section, click 
Edit
, then 
Generate New Client Secret
.
Note:
 If you generate a new set of client credentials, update your app to include the new credentials for your SSO integration.
Test your integration 
This portion of the guide takes you through the steps required to test your integration.
Assign users 
First, you must assign your integration to one or more test users in your org:
Click the 
Assignments
 tab.
Click 
Assign
 and then select either 
Assign to People
 or 
Assign to Groups
.
Enter the appropriate people or groups that you want to have Single Sign-On into your application, and then click 
Assign
 for each.
Verify the user-specific attributes for any people that you add, and then select 
Save and Go Back
.
Click 
Done
.
Test Single Sign-On 
Sign out of your Okta org by clicking 
Sign out
 in the upper-right corner of the Admin Console.
Sign in to the Okta End-User Dashboard as a regular user assigned to the integration.
Note:
 If you sign in as a non-admin user to your Okta org from a browser, the End-User Dashboard appears. To access the End-User Dashboard from a mobile device, see 
Okta End-User-Dashboard
(opens new window)
.
Click the Okta tile for the integration and confirm that the user is signed in to your app.
Test Application-initiated sign-in flow 
Sign out of your administrator account in your development org and also sign out of your application.
Begin the sign-in process to your app, either through your app sign-on button or directly by pasting one of the 
Sign-in redirect URIs
 into your web browser address bar. Regardless of which method you choose, your browser must end up at the Okta-hosted sign-in page.
Sign in to your regular user account on the Okta-hosted sign-in page.
Confirm that Okta successfully redirects back into your application.
Troubleshoot issues 
If you run into issues with your sign-in process, you can try the following to troubleshoot the issues:
In the Admin Console of your Okta development org, go to 
Reports
 > 
System Log
 and examine any failure messages reported.
Open the Admin Console in your web browser and examine any status messages related to your authentication request. The console errors have status codes in the 4XX range. Investigate and resolve any error messages generated by your sign-in request.
Post your questions on the 
Okta Developer Forum
(opens new window)
.
Next steps 
After you test your SSO integration, communicate to your Okta org users about the custom app SSO capability.
If you decide to publish your integration to the OIN later on:
Review the 
Publish an OIN integration
 overview to understand the submission process for publishing an integration.
Review the 
OIN submission requirements
 before starting the submission process.
Use the 
OIN Wizard: Submit an SSO integration
 guide to test and submit your integration to the OIN.
See also 
OAuth 2.0 vs. OpenID Connect
Okta Developer Forum: OIDC
(opens new window)
Redirect authentication
: for language and platform-specific redirect authentication guides
Embedded authentication
: for language, platform-specific, and embedded-authentication use case guides
Edit This Page On GitHub
      Instructions for
OpenID Connect
Loading...
        On this page
Overview
Create your private integration in Okta
Specify your integration settings
Test your integration
Assign users
Test Single Sign-On
Next steps
See also
      Additional links
          Questions? Ask us on the
            forum.
          Contact & Legal
Contact our team
Contact sales
Developer Service terms
Site terms
Privacy policy
Copyright & trademarks
          More information
Integrate with Okta
Pricing
3rd-party notes
Auth0
Archive
OKTA.COM
Products, case studies, resources
HELP CENTER
Knowledgebase, roadmaps, and more
TRUST
System status, security, compliance
Copyright Â© 2025 Okta. All rights reserved.
Feedback